@model classificationsOfProducts;
@inject SignInManager<ApplicationUser> SignInManager
@inject ApplicationDbContext applicationDbContext
@inject UserManager<ApplicationUser> UserManager

@*style="position:fixed; top:65px ;right:1%; z-index:1003; "*@
<div class="mt-3 mb-2 d-flex justify-content-between">
    <div>
        <p class="h1 fw-bold text" style="color:#198754; text-shadow:2px 2px #ffaffa">Shoping E-Commerce</p>
    </div>
    <div>
        <button class="btn btn-outline-secondary btn_search mx-1 p-2">Shearch</button>
        <button class="btn btn-success btn_categorey mx-1 text-white p-2">Categories</button>
    </div>
 </div>
<div class="col-12 mb-2 mt-1 p-1 Categories d-flex justify-content-center">
    <div class="w-75">
        <form method="post" asp-action="Index" id="FormSelect" class="col-12 d-flex justify-content-between">
            <div class="col-4">
                <select class="form-control dropDownList p-3" id="AgeStagesId" asp-for="AgeStagesId" asp-items="@(new SelectList(Model.AgeStages,"Id","Name"));">
                    <option value="0">Age</option>
                </select>
            </div>
            <div class="col-4">
                <select class="form-control dropDownList p-3" id="HumanClassificationsId" asp-for="HumanClassificationsId" asp-items="@(new SelectList(Model.HumanClassifications,"Id","Name"));">
                    <option value="0">Human Type</option>
                </select>
            </div>
            <div class="col-4">
                <select class="form-control dropDownList p-3" id="ClothesClassificationsId" asp-for="ClothesClassificationsId" asp-items="@(new SelectList(Model.ClothesClassifications,"Id","Name"));">
                    <option value="0">Products</option>
                </select>
            </div>
        </form>
    </div>
 </div>


<div class="container border shadow-lg rounded-3 p-4">
    <div class="row mt-3 container">
        @if (!Model.Product.Any())
        {
            <div class="col-md-12 Notice mt-3 shadow-lg">
                <p class="alert alert-warning h5 text-center">No item founded up till now ..!</p>
            </div>
        }
        @{
            var userId = UserManager.GetUserId(User);
        }

        @foreach (var (item, index) in Model.Product.Select((value, i) => (value, i)))
        {
            <div class="col-sm-9 col-md-4 col-lg-3 img_transformation divProduct mb-2">
                <div class="card rounded-3 shadow-lg" style="height: 420px">
                    <div class="overflow-hidden rounded-3">
                        <img class="card-img-top " style="height:230px" src="@($"{FileSettings.imagePath}/{FileSettings.imageProduct}/{item.NameOfImage}")" alt="Product" />
                    </div>
                     <div class="card-body jj rounded-3">
                        <p class="card-title text-muted" style="height:40px">
                            @(item.Title.Length > 27 ? $"{item.Title.Substring(0, 45)}.." : item.Title)
                        </p>
                        <div class="d-flex justify-content-between mb-1 ">
                            <p class="card-text h6 font-weight-bold">@item.Marka.Name</p>
                            <p class="card-text h6 p-2">@item.Price $</p>
                        </div>
                        <div class="d-flex justify-content-between">
                            <p class=" h6">@item.Size</p>
                            <p class=" h6">Size: @item.SizeNumber </p>
                        </div>
                        <div class="mb-2">
                            Discount: @item.Discount%
                        </div>
                      
                                <div class=" show@(item.Id) mt-3">
                                    <a class="btn btn-success border rounded border-success card-link favourite w-100"
                                    href="javascript:;" data-id="@item.Id" title="Add Favourite..">
                                        <span style="font-size:16.5px">Favourite</span>
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    @if (Model.userProducts.Any(p => p.ApplicationUserId == userId && p.ProductId == item.Id))
                                    {
                                        <i style="color:beige; font-size:16.5px" class="@("changeFavourite"+item.Id) bi bi-heart-fill "></i>
                                    }else{
                                        <i style="color:beige; font-size:16.5px" class="@("changeFavourite"+item.Id) bi bi-heart "></i>
                                    }
                                }
                                else
                                {
                                    <i style="color:beige; font-size:16.5px" class="@("changeFavourite"+item.Id) bi bi-heart-fill"></i>
                                }
                                    </a>
                                </div>
                     
                    </div>
                </div>
            </div>
        }
    </div>
</div>


<div style="position:fixed; right:10px ; bottom:10px; z-index:1002; ">
    <a asp-controller="Home" asp-action="Index" class="btn btn-success ">Refresh</a>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $(".Categories").hide();
            $(".btn_search").hide();
        });

        $(".btn_categorey").click(function () {
            var innertext = $(this).text() == "Categories" ? "Close" : "Categories";
            $(this).text(innertext).toggleClass("btn-success").toggleClass("btn-danger");
            $(".btn_search").fadeToggle(200);
            $(".Categories").slideToggle(50);
        });

        $(".btn_search").click(function () {
            $(this).text("Category").toggleClass("btn-danger");
            $("#FormSelect").submit();
         });

        $(".favourite").on("click", function () {
            var btn = $(this);
            $.ajax({
                url: "/Card/UserIsSigned",
                success: function (result) {
                    if (result == "NotLogin") {
                        window.location.href = "/Identity/Account/Login";
                    }
                    else {
                        var selectClassShow = ".changeFavourite" + btn.data("id");

                        if ($(selectClassShow).hasClass("bi-heart-fill")) {
                            $.ajax({
                                url: "/Card/DeleteFavourite/" + btn.data("id"),
                                type: "GET",
                                success: function () {
                                    $(selectClassShow).removeClass("bi-heart-fill").addClass("bi-heart");
                                    console.log("delete");
                                },
                                error: function () {
                                    alert("Some Thing Is Wrong!");
                                }
                            });
                        }
                        else {
                            $.ajax({
                                url: "/Card/addFavourite?Id=" + btn.data("id"),
                                success: function (result) {
                                    $(selectClassShow).removeClass("bi-heart").addClass("bi-heart-fill");
                                    console.log("Added");
                                },
                                error: function () {
                                    alert("Some Thing Is Wrong!");
                                }
                            });
                        }


                        $(selectClassShow).toggleClass("bi-heart-fill").toggleClass("bi-heart");
                    }
                },
                error: function () {
                    alert("Some thing is error !");
                }
            });
        });

        //// Add Mount to Product
        // $(".show").click(function () {
        //     $(".show_mount").removeClass("d-none");
        //     $(".show").addClass("d-none");
        // });
        // $("#mount").keyup(function () {
        //     var aData = $(".editMount");
        //     aData.attr("data-id", $(this).val());
        //     var data = aData.data("id");
        // })

        // $(".buy").on("click", function () {
        //     var btn = $(this);
        //     console.log(btn.data("id"));
        //     $.ajax({
        //         url: "/Card/addBuyed?Id=" + btn.data("id"),
        //         success: function () {
        //             alert("Added");
        //             $(".show_mount").addClass("d-none");
        //             $(".show").removeClass("d-none");
        //         },
        //         error: function () {
        //             alert("Ther are Wrong");
        //             $(".show_mount").addClass("d-none");
        //             $(".show").removeClass("d-none");
        //         }
        //     });
        // });


        // check user if login or not 
        
    </script>
}